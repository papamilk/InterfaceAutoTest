<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="blk.interfacetesting.dao.data.IftbURLTestCaseMapper" >
  <resultMap id="BaseResultMap" type="blk.interfacetesting.modle.data.IftbURLTestCase" >
    <id column="iutc_id" property="iutcId" jdbcType="INTEGER" />
    <result column="mum_id" property="mumId" jdbcType="INTEGER" />
    <result column="mtc_id" property="mtcId" jdbcType="INTEGER" />
    <result column="iutc_status" property="iutcStatus" jdbcType="VARCHAR" />
    <result column="iutc_createtime" property="iutcCreatetime" jdbcType="VARCHAR" />
    <result column="iutc_createuser" property="iutcCreateuser" jdbcType="VARCHAR" />
    <result column="iutc_updatetime" property="iutcUpdatetime" jdbcType="VARCHAR" />
    <result column="iutc_updateuser" property="iutcUpdateuser" jdbcType="VARCHAR" />
    <result column="mtc_name" property="mtcName" jdbcType="VARCHAR" />
    <result column="mum_name" property="mumName" jdbcType="VARCHAR" />
  </resultMap>
  <select id="getURLTestCases" resultMap="BaseResultMap">
    SELECT
      i.iutc_id AS iutcId,
      i.mum_id AS mumId,
      i.mtc_id AS mtcId,
      tc.mtc_name AS mtcName,
      mu.mum_name AS mumName
    FROM iftb_url_test_case i
    JOIN mstb_test_case tc ON tc.mtc_id = i.mtc_id
    JOIN mstb_url_management mu ON mu.mum_id = i.mum_id
  </select>
  <select id="getURLTestCaseOne" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    SELECT
      i.iutc_id AS iutcId,
      i.mum_id AS mumId,
      i.mtc_id AS mtcId,
      tc.mtc_name AS mtcName,
      mu.mum_name AS mumName
    FROM iftb_url_test_case i
    JOIN mstb_test_case tc ON tc.mtc_id = i.mtc_id
    JOIN mstb_url_management mu ON mu.mum_id = i.mum_id
    WHERE
      i.iutc_id = #{iutcId}
  </select>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    iutc_id, mum_id, mtc_id, iutc_status, iutc_createtime, iutc_createuser, iutc_updatetime, 
    iutc_updateuser
  </sql>
  <!-- merged search for mtcName and mumName -->
  <sql id="merged_search_column">
    i.iutc_id, i.mum_id, i.mtc_id, i.iutc_status, i.iutc_createtime,
    i.iutc_createuser, i.iutc_updatetime, i.iutc_updateuser, tc.mtc_name, mu.mum_name
  </sql>
  <sql id="merged_search_table">
    i LEFT JOIN mstb_test_case tc ON tc.mtc_id = i.mtc_id
    LEFT JOIN mstb_url_management mu ON mu.mum_id = i.mum_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="blk.interfacetesting.modle.data.IftbURLTestCaseCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <choose>
      <when test="mergedSearch">
        <include refid="merged_search_column"/>
        from iftb_url_test_case
        <include refid="merged_search_table"/>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
        from iftb_url_test_case
      </otherwise>
    </choose>

    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="page != null" >
      limit #{page.begin} , #{page.length}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from iftb_url_test_case
    where iutc_id = #{iutcId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from iftb_url_test_case
    where iutc_id = #{iutcId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="blk.interfacetesting.modle.data.IftbURLTestCaseCriteria" >
    delete from iftb_url_test_case
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="blk.interfacetesting.modle.data.IftbURLTestCase" useGeneratedKeys="true" keyProperty="iutcId">
    insert into iftb_url_test_case (iutc_id, mum_id, mtc_id, 
      iutc_status, iutc_createtime, iutc_createuser, 
      iutc_updatetime, iutc_updateuser)
    values (#{iutcId,jdbcType=INTEGER}, #{mumId,jdbcType=INTEGER}, #{mtcId,jdbcType=INTEGER}, 
      #{iutcStatus,jdbcType=VARCHAR}, #{iutcCreatetime,jdbcType=VARCHAR}, #{iutcCreateuser,jdbcType=VARCHAR}, 
      #{iutcUpdatetime,jdbcType=VARCHAR}, #{iutcUpdateuser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="blk.interfacetesting.modle.data.IftbURLTestCase" >
    insert into iftb_url_test_case
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="iutcId != null" >
        iutc_id,
      </if>
      <if test="mumId != null" >
        mum_id,
      </if>
      <if test="mtcId != null" >
        mtc_id,
      </if>
      <if test="iutcStatus != null" >
        iutc_status,
      </if>
      <if test="iutcCreatetime != null" >
        iutc_createtime,
      </if>
      <if test="iutcCreateuser != null" >
        iutc_createuser,
      </if>
      <if test="iutcUpdatetime != null" >
        iutc_updatetime,
      </if>
      <if test="iutcUpdateuser != null" >
        iutc_updateuser,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="iutcId != null" >
        #{iutcId,jdbcType=INTEGER},
      </if>
      <if test="mumId != null" >
        #{mumId,jdbcType=INTEGER},
      </if>
      <if test="mtcId != null" >
        #{mtcId,jdbcType=INTEGER},
      </if>
      <if test="iutcStatus != null" >
        #{iutcStatus,jdbcType=VARCHAR},
      </if>
      <if test="iutcCreatetime != null" >
        #{iutcCreatetime,jdbcType=VARCHAR},
      </if>
      <if test="iutcCreateuser != null" >
        #{iutcCreateuser,jdbcType=VARCHAR},
      </if>
      <if test="iutcUpdatetime != null" >
        #{iutcUpdatetime,jdbcType=VARCHAR},
      </if>
      <if test="iutcUpdateuser != null" >
        #{iutcUpdateuser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="blk.interfacetesting.modle.data.IftbURLTestCaseCriteria" resultType="java.lang.Integer" >
    select count(*) from iftb_url_test_case
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update iftb_url_test_case
    <set >
      <if test="record.iutcId != null" >
        iutc_id = #{record.iutcId,jdbcType=INTEGER},
      </if>
      <if test="record.mumId != null" >
        mum_id = #{record.mumId,jdbcType=INTEGER},
      </if>
      <if test="record.mtcId != null" >
        mtc_id = #{record.mtcId,jdbcType=INTEGER},
      </if>
      <if test="record.iutcStatus != null" >
        iutc_status = #{record.iutcStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.iutcCreatetime != null" >
        iutc_createtime = #{record.iutcCreatetime,jdbcType=VARCHAR},
      </if>
      <if test="record.iutcCreateuser != null" >
        iutc_createuser = #{record.iutcCreateuser,jdbcType=VARCHAR},
      </if>
      <if test="record.iutcUpdatetime != null" >
        iutc_updatetime = #{record.iutcUpdatetime,jdbcType=VARCHAR},
      </if>
      <if test="record.iutcUpdateuser != null" >
        iutc_updateuser = #{record.iutcUpdateuser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update iftb_url_test_case
    set iutc_id = #{record.iutcId,jdbcType=INTEGER},
      mum_id = #{record.mumId,jdbcType=INTEGER},
      mtc_id = #{record.mtcId,jdbcType=INTEGER},
      iutc_status = #{record.iutcStatus,jdbcType=VARCHAR},
      iutc_createtime = #{record.iutcCreatetime,jdbcType=VARCHAR},
      iutc_createuser = #{record.iutcCreateuser,jdbcType=VARCHAR},
      iutc_updatetime = #{record.iutcUpdatetime,jdbcType=VARCHAR},
      iutc_updateuser = #{record.iutcUpdateuser,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="blk.interfacetesting.modle.data.IftbURLTestCase" >
    update iftb_url_test_case
    <set >
      <if test="mumId != null" >
        mum_id = #{mumId,jdbcType=INTEGER},
      </if>
      <if test="mtcId != null" >
        mtc_id = #{mtcId,jdbcType=INTEGER},
      </if>
      <if test="iutcStatus != null" >
        iutc_status = #{iutcStatus,jdbcType=VARCHAR},
      </if>
      <if test="iutcCreatetime != null" >
        iutc_createtime = #{iutcCreatetime,jdbcType=VARCHAR},
      </if>
      <if test="iutcCreateuser != null" >
        iutc_createuser = #{iutcCreateuser,jdbcType=VARCHAR},
      </if>
      <if test="iutcUpdatetime != null" >
        iutc_updatetime = #{iutcUpdatetime,jdbcType=VARCHAR},
      </if>
      <if test="iutcUpdateuser != null" >
        iutc_updateuser = #{iutcUpdateuser,jdbcType=VARCHAR},
      </if>
    </set>
    where iutc_id = #{iutcId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="blk.interfacetesting.modle.data.IftbURLTestCase" >
    update iftb_url_test_case
    set mum_id = #{mumId,jdbcType=INTEGER},
      mtc_id = #{mtcId,jdbcType=INTEGER},
      iutc_status = #{iutcStatus,jdbcType=VARCHAR},
      iutc_createtime = #{iutcCreatetime,jdbcType=VARCHAR},
      iutc_createuser = #{iutcCreateuser,jdbcType=VARCHAR},
      iutc_updatetime = #{iutcUpdatetime,jdbcType=VARCHAR},
      iutc_updateuser = #{iutcUpdateuser,jdbcType=VARCHAR}
    where iutc_id = #{iutcId,jdbcType=INTEGER}
  </update>
</mapper>